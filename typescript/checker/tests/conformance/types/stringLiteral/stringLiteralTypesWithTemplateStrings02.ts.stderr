error: AssignFailed {
    span: Span {
        lo: BytePos(
            29,
        ),
        hi: BytePos(
            53,
        ),
        ctxt: #0,
    },
    left: Lit(
        TsLitType {
            span: Span {
                lo: BytePos(
                    34,
                ),
                hi: BytePos(
                    43,
                ),
                ctxt: #0,
            },
            lit: Str(
                Str {
                    span: Span {
                        lo: BytePos(
                            34,
                        ),
                        hi: BytePos(
                            43,
                        ),
                        ctxt: #0,
                    },
                    value: Atom('AB
                    C' type=inline),
                    has_escape: true,
                },
            ),
        },
    ),
    right: Keyword(
        TsKeywordType {
            span: Span {
                lo: BytePos(
                    46,
                ),
                hi: BytePos(
                    53,
                ),
                ctxt: #0,
            },
            kind: TsStringKeyword,
        },
    ),
    cause: [],
}
 --> $DIR/tests/conformance/types/stringLiteral/stringLiteralTypesWithTemplateStrings02.ts:3:5
  |
3 |   let abc: "AB\r\nC" = `AB
  |  _____^
4 | | C`;
  | |__^

error: AssignFailed {
    span: Span {
        lo: BytePos(
            60,
        ),
        hi: BytePos(
            96,
        ),
        ctxt: #0,
    },
    left: Lit(
        TsLitType {
            span: Span {
                lo: BytePos(
                    74,
                ),
                hi: BytePos(
                    81,
                ),
                ctxt: #0,
            },
            lit: Str(
                Str {
                    span: Span {
                        lo: BytePos(
                            74,
                        ),
                        hi: BytePos(
                            81,
                        ),
                        ctxt: #0,
                    },
                    value: Atom('DE
                    F' type=inline),
                    has_escape: true,
                },
            ),
        },
    ),
    right: Keyword(
        TsKeywordType {
            span: Span {
                lo: BytePos(
                    84,
                ),
                hi: BytePos(
                    96,
                ),
                ctxt: #0,
            },
            kind: TsStringKeyword,
        },
    ),
    cause: [],
}
 --> $DIR/tests/conformance/types/stringLiteral/stringLiteralTypesWithTemplateStrings02.ts:5:5
  |
5 | let de_NEWLINE_f: "DE\nF" = `DE${"\n"}F`;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

